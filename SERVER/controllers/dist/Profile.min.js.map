{"version":3,"sources":["Profile.js"],"names":["Profile","require","User","exports","updateProfile","req","res","_req$body","_req$body$dateOfBirth","dateOfBirth","_req$body$about","about","contactNumber","gender","id","userDetails","profileId","profileDetails","regeneratorRuntime","async","_context","prev","next","body","user","abrupt","status","json","success","message","awrap","findById","sent","save","t0","additionalDetails","error","stop","_context2","findByIdAndDelete","_id","updatedSection","getAllUserDetails","_context3","populate","exec"],"mappings":"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","file":"Profile.min.js","sourcesContent":["const Profile = require(\"../models/Profile\");\nconst User = require(\"../models/User\");\n\nexports.updateProfile = async (req,res) => {\n    try{\n        const {dateOfBirth = \"\", about = \"\", contactNumber, gender} = req.body;\n\n        const id = req.user.id;\n\n        if(!contactNumber || !gender || !id){\n            return res.status(400).json({\n                success:false,\n                message:'All fields are required',\n            });\n        }\n\n        const userDetails = await User.findById(id);\n        const profileId = userDetails.additionalDetails;\n        const profileDetails = await Profile.findById(profileId);\n\n        profileDetails.dateOfBirth = dateOfBirth;\n        profileDetails.about = about;\n        profileDetails.gender = gender;\n        profileDetails.contactNumber = contactNumber;\n        await profileDetails.save();\n\n        return res.status(200).json({\n            success:true,\n            message:'profile updated successfully',\n            profileDetails,\n        });\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            error:error.message,\n            \n        });\n    }\n}\n\nexports.deleteAccount = async (req,res) =>{\n    try{\n        const id = req.user.id;\n\n        const userDetails = await User.findById(id);\n        if(!userDetails){\n            return res.status(404).json({\n                success:false,\n                message:'user not found',\n            });\n        }\n\n        await Profile.findByIdAndDelete({_id:userDetails.additionalDetails});\n\n        await User.findByIdAndDelete({_id:id});\n\n        return res.status(200).json({\n            success:true,\n            message:'User deleted successfully',\n            updatedSection,\n            \n        });\n    }catch(error){\n        return res.status(500).json({\n            success:false,\n            message:'user cannot be deleted',\n            \n        });\n\n    }\n}\n\nexports.getAllUserDetails = async (req,res) =>{\n    try{\n        const id = req.user.id;\n        const userDetails = await User.findById(id).populate(\"additionalDeails\").exec();\n\n                \n                return res.status(200).json({\n                    success:true,\n                    message:'User data fetched successfully',\n\n                    \n                });\n\n\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            message:error.message,\n            \n        });\n    }\n}"]}