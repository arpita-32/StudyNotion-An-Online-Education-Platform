"use strict";var User=require("../models/User"),mailSender=require("../utils/mailSender"),bcrypt=require("bcrypt");exports.resetPasswordToken=function(r,s){var t,n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.body.email,e.next=4,regeneratorRuntime.awrap(User.findOne({email:t}));case 4:if(e.sent){e.next=7;break}return e.abrupt("return",s.json({success:fals,message:"your email is not registered with us"}));case 7:return n=crypto.randomUUID(),e.next=10,regeneratorRuntime.awrap(User.findOneAndUpdate({email:t},{token:n,resetPasswordExpires:Date.now()+3e5},{new:!0}));case 10:return e.sent,a="http://localhost:3000/update-password/".concat(n),e.next=14,regeneratorRuntime.awrap(mailSender(t,"Password reset link","Password reset link:".concat(a)));case 14:return e.abrupt("return",s.json({success:!0,message:"email sent successfully,please check email and change pwd"}));case 17:return e.prev=17,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",s.status(500).json({success:!1,message:"something went wrong while reset"}));case 21:case"end":return e.stop()}},null,null,[[0,17]])},exports.resetPassword=function(r,s){var t,n,a,u,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,t=r.body,n=t.password,a=t.confirmPassword,u=t.token,n!=a)return e.abrupt("return",s.json({success:!1,message:"password not matching"}));e.next=4;break;case 4:if(userDetails){e.next=6;break}return e.abrupt("return",s.json({success:!1,message:"Token is invalid"}));case 6:if(userDetails.resetPasswordExpires<Date.now())return e.abrupt("return",s.json({success:!1,message:"token is expired ,please regenerate your token"}));e.next=8;break;case 8:return e.next=10,regeneratorRuntime.awrap(bcrypt.hash(n,10));case 10:return o=e.sent,e.next=13,regeneratorRuntime.awrap(User.findOneAndUpdate({token:u},{password:o},{new:!0}));case 13:return e.abrupt("return",s.status(200).json({success:!0,message:"password reset successfully"}));case 16:return e.prev=16,e.t0=e.catch(0),e.abrupt("return",s.status(500).json({success:!1,message:"something went wrong"}));case 19:case"end":return e.stop()}},null,null,[[0,16]])};
//# sourceMappingURL=ResetPassword.min.js.map
