"use strict";var User=require("../models/User"),mailSender=require("../utils/mailSender"),bcrypt=require("bcrypt"),crypto=require("crypto");exports.resetPasswordToken=function(r,s){var t,n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=r.body.email,e.next=4,regeneratorRuntime.awrap(User.findOne({email:t}));case 4:if(e.sent){e.next=7;break}return e.abrupt("return",s.status(404).json({success:!1,message:"Your email is not registered with us"}));case 7:return n=crypto.randomUUID(),e.next=10,regeneratorRuntime.awrap(User.findOneAndUpdate({email:t},{token:n,resetPasswordExpires:Date.now()+3e5},{new:!0}));case 10:return e.sent,a="http://localhost:3000/update-password/".concat(n),e.next=14,regeneratorRuntime.awrap(mailSender(t,"Password Reset Link","Password Reset Link: ".concat(a)));case 14:return e.abrupt("return",s.json({success:!0,message:"Email sent successfully, please check email and change password"}));case 17:return e.prev=17,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",s.status(500).json({success:!1,message:"Something went wrong while sending reset email"}));case 21:case"end":return e.stop()}},null,null,[[0,17]])},exports.resetPassword=function(r,s){var t,n,a,u,o,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,t=r.body,n=t.password,a=t.confirmPassword,u=t.token,n!==a)return e.abrupt("return",s.status(400).json({success:!1,message:"Passwords do not match"}));e.next=4;break;case 4:return e.next=6,regeneratorRuntime.awrap(User.findOne({token:u}));case 6:if(o=e.sent){e.next=9;break}return e.abrupt("return",s.status(404).json({success:!1,message:"Token is invalid"}));case 9:if(o.resetPasswordExpires<Date.now())return e.abrupt("return",s.status(400).json({success:!1,message:"Token has expired, please regenerate your token"}));e.next=11;break;case 11:return e.next=13,regeneratorRuntime.awrap(bcrypt.hash(n,10));case 13:return c=e.sent,e.next=16,regeneratorRuntime.awrap(User.findOneAndUpdate({token:u},{password:c,token:null,resetPasswordExpires:null},{new:!0}));case 16:return e.abrupt("return",s.json({success:!0,message:"Password reset successfully"}));case 19:return e.prev=19,e.t0=e.catch(0),console.error(e.t0),e.abrupt("return",s.status(500).json({success:!1,message:"Something went wrong while resetting password"}));case 23:case"end":return e.stop()}},null,null,[[0,19]])};
//# sourceMappingURL=ResetPassword.min.js.map
