{"version":3,"sources":["Subsection.js"],"names":["SubSection","require","Section","exports","req","res","_req$body","sectionId","title","timeDuration","description","video","uploadDetails","updatedSection","regeneratorRuntime","async","_context","prev","next","body","uploadImageToCloudinary","videoFile","abrupt","createSubSection","json","success","message","awrap","process","env","FOLDER_NAME","sent","create","videoUrl","secure_url","findByIdAndUpdate","_id","$push","SubSectionDetails","new","status","t0","error","stop"],"mappings":"aAAA,IAAMA,WAAaC,QAAQ,wBACrBC,QAAUD,QAAQ,8BADGA,QAAA,0BAArBD,iCAAAA,wBACNG,QAAMD,iBAAkB,SAAAE,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAF,EAAAC,KAAA,EAAAX,EAKoCF,EAAIe,KAJ9BlB,EADVK,EACUL,UAAQO,EADlBF,EACkBE,MAAAC,EADlBH,EACkBG,aAAAC,EADlBJ,EACkBI,YAAnCU,EAAAA,EAAAA,MAKyBC,UACpBd,GAAcC,GAAUC,GAAiBE,EAP7B,CAAAK,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAM,OAAA,SAGhBC,EAAAA,OAAmB,KAAAC,KAAA,CAAAC,SAAA,EAOXC,QAAQ,6BAVA,KAAA,EAAA,OAAAV,EAAAE,KAAA,EAAAJ,mBAAAa,MAGGP,wBAAAT,EAAAiB,QAAAC,IAAAC,cAHH,KAAA,EAAA,OAGGlB,EAHHI,EAAAe,KAAAf,EAAAE,KAAA,GAAAJ,mBAAAa,MAKTpB,WAFYyB,OAEZzB,CACDI,MAAQP,EAYVK,aAAaA,EAfEC,YAIfH,EAJe0B,SAAArB,EAAAsB,cAHH,KAAA,GAAA,OAAAlB,EAAAe,KAAAf,EAAAE,KAAA,GAAAJ,mBAAAa,MAuBazB,QAAQiC,kBAAkB,CAACC,IAAI7B,GApBzC,CAAA8B,MAAA,CAMXZ,WADwBa,kBAAAF,MAoB5B,CAACG,KAAI,KA5BO,KAAA,GAAA,OAuBV1B,EAvBUG,EAAAe,KAAAf,EAAAM,OAAA,SAGGjB,EAAAmC,OAAA,KAAAhB,KAAA,CAAAC,SAAA,EA6BfC,QAAQ,mCA7BOb,eAAAA,KAHH,KAAA,GAAA,OAAAG,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,MAAA,GAAAA,EAAAM,OAAA,SAkBZb,EAAAA,OAAaA,KAAAA,KAAAA,CACbC,SAAAA,EACAuB,QAAQ,wBAjBOS,MAAA1B,EAAAyB,GAAAf,WAHH,KAAA,GAAA,IAAA,MAAA,OAAAV,EAAA2B,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"Subsection.min.js","sourcesContent":["const SubSection = require(\"../models/SubSection\");\nconst Section = require(\"../models/Section\");\nconst {uploadImageToCloudinary} = require(\"../utils/imageUploader\");\n\nexports.createSubSection = async (req ,res) => {\n    try{\n        const {sectionId, title,timeDuration,description} = req.body;\n        const video = req.files.videoFile;\n        if(!sectionId || !title || !timeDuration || !video){\n            return res.status(400).json({\n                success:false,\n                message:'All fields are required',\n            });\n        }\n\n        const uploadDetails = await uploadImageToCloudinary(video,process.env.FOLDER_NAME);\n\n        const subSectionDetails = await SubSection.create({\n            title:title,\n            timeDuration:timeDuration,\n            description:description,\n            videoUrl:uploadDetails.secure_url,\n        })\n\n        const updatedSection = await Section.findByIdAndUpdate({_id:sectionId},\n            {$push:{\n                subSection:SubSectionDetails._id,\n\n            }},\n            {new:true}\n        );\n        return res.status(200).json({\n            success:true,\n            message:'sub Section created successfully',\n            updatedSection,\n            \n        });\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            message:'Internal server error',\n            error:error.message,\n            \n        });\n    }\n}\n//update and delete section"]}