{"version":3,"sources":["Subsection.js"],"names":["SubSection","require","Section","uploadImageToCloudinary","exports","createSubSection","req","res","body","sectionId","title","timeDuration","description","video","files","videoFile","status","json","success","message","process","env","FOLDER_NAME","uploadDetails","create","videoUrl","secure_url","subSectionDetails","findByIdAndUpdate","_id","$push","subSection","SubSectionDetails","updatedSection","error"],"mappings":";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,sBAAD,CAA1B;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,mBAAD,CAAvB;;eACkCA,OAAO,CAAC,wBAAD,C;IAAlCE,uB,YAAAA,uB;;AAEPC,OAAO,CAACC,gBAAR,GAA2B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEiCD,GAAG,CAACE,IAFrC,EAEZC,SAFY,aAEZA,SAFY,EAEDC,KAFC,aAEDA,KAFC,EAEKC,YAFL,aAEKA,YAFL,EAEkBC,WAFlB,aAEkBA,WAFlB;AAGbC,UAAAA,KAHa,GAGLP,GAAG,CAACQ,KAAJ,CAAUC,SAHL;;AAAA,gBAIhB,CAACN,SAAD,IAAc,CAACC,KAAf,IAAwB,CAACC,YAAzB,IAAyC,CAACE,KAJ1B;AAAA;AAAA;AAAA;;AAAA,2CAKRN,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,KADgB;AAExBC,YAAAA,OAAO,EAAC;AAFgB,WAArB,CALQ;;AAAA;AAAA;AAAA,0CAWShB,uBAAuB,CAACU,KAAD,EAAOO,OAAO,CAACC,GAAR,CAAYC,WAAnB,CAXhC;;AAAA;AAWbC,UAAAA,aAXa;AAAA;AAAA,0CAaavB,UAAU,CAACwB,MAAX,CAAkB;AAC9Cd,YAAAA,KAAK,EAACA,KADwC;AAE9CC,YAAAA,YAAY,EAACA,YAFiC;AAG9CC,YAAAA,WAAW,EAACA,WAHkC;AAI9Ca,YAAAA,QAAQ,EAACF,aAAa,CAACG;AAJuB,WAAlB,CAbb;;AAAA;AAabC,UAAAA,iBAba;AAAA;AAAA,0CAoBUzB,OAAO,CAAC0B,iBAAR,CAA0B;AAACC,YAAAA,GAAG,EAACpB;AAAL,WAA1B,EACzB;AAACqB,YAAAA,KAAK,EAAC;AACHC,cAAAA,UAAU,EAACC,iBAAiB,CAACH;AAD1B;AAAP,WADyB,EAKzB;AAAC,mBAAI;AAAL,WALyB,CApBV;;AAAA;AAoBbI,UAAAA,cApBa;AAAA,2CA2BZ1B,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,IADgB;AAExBC,YAAAA,OAAO,EAAC,kCAFgB;AAGxBc,YAAAA,cAAc,EAAdA;AAHwB,WAArB,CA3BY;;AAAA;AAAA;AAAA;AAAA,2CAmCZ1B,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,KADgB;AAExBC,YAAAA,OAAO,EAAC,uBAFgB;AAGxBe,YAAAA,KAAK,EAAC,YAAMf;AAHY,WAArB,CAnCY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B,C,CA2CA","sourcesContent":["const SubSection = require(\"../models/SubSection\");\nconst Section = require(\"../models/Section\");\nconst {uploadImageToCloudinary} = require(\"../utils/imageUploader\");\n\nexports.createSubSection = async (req ,res) => {\n    try{\n        const {sectionId, title,timeDuration,description} = req.body;\n        const video = req.files.videoFile;\n        if(!sectionId || !title || !timeDuration || !video){\n            return res.status(400).json({\n                success:false,\n                message:'All fields are required',\n            });\n        }\n\n        const uploadDetails = await uploadImageToCloudinary(video,process.env.FOLDER_NAME);\n\n        const subSectionDetails = await SubSection.create({\n            title:title,\n            timeDuration:timeDuration,\n            description:description,\n            videoUrl:uploadDetails.secure_url,\n        })\n\n        const updatedSection = await Section.findByIdAndUpdate({_id:sectionId},\n            {$push:{\n                subSection:SubSectionDetails._id,\n\n            }},\n            {new:true}\n        );\n        return res.status(200).json({\n            success:true,\n            message:'sub Section created successfully',\n            updatedSection,\n            \n        });\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            message:'Internal server error',\n            error:error.message,\n            \n        });\n    }\n}\n//update and delete section"],"file":"Subsection.dev.js"}