{"version":3,"sources":["Course.js"],"names":["Course","require","Tag","uploadImageToCloudinary","exports","createCourse","req","res","_req$body","courseName","courseDescription","whatYouWillLearn","price","tag","thumbnail","userId","instructorDetails","tagDetails","thumbnailImage","regeneratorRuntime","async","_context","prev","next","body","files","abrupt","status","json","success","message","user","id","awrap","findById","sent","process","env","FOLDER_NAME","create","console","instructor","_id","secure_url","findByIdAndUpdate","t0","stop"],"mappings":"aAAA,IAAMA,OAASC,QAAQ,oBACjBC,IAAMD,QAAQ,kBADdD,KAASC,QAAQ,2BAGWA,QAAQ,0BAAnCE,iCAAAA,wBAEPC,QAAQC,aAAe,SAAOC,EAAMC,GAAb,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAF,EAAAC,KAAA,EAAAd,EAEsDF,EAAIkB,KAAlEf,EAFQD,EAERC,WAAYC,EAFJF,EAEIE,kBAAmBC,EAFvBH,EAEuBG,iBAAiBC,EAFxCJ,EAEwCI,MAAOC,EAF/CL,EAE+CK,IAJ/DV,EAAAA,EAMuBsB,MAAMP,eAJ5Bb,GAAeK,GAAAC,GAAAC,GAAAC,GAAAC,EAAA,CAAAO,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAK,OAAA,SAAAnB,EAAAoB,OAAA,KAAAC,KAAA,CAQPC,SAAQ,EARDC,QAAA,6BAAA,KAAA,EAAA,OAAAf,EAAAT,EAAAyB,KAAAC,GAAAX,EAAAE,KAAA,EAAAJ,mBAAAc,MAERxB,KAFQyB,SAAAnB,IAAA,KAAA,EAAA,GAAAC,EAAAK,EAAAc,KAITrB,QAAAA,IAJS,sBAIaI,GAJbF,EAAA,CAAAK,EAAAE,KAAA,GAAA,MAAA,OAAAF,EAAAK,OAAA,SAAAnB,EAAAoB,OAAA,KAAAC,KAAA,CAAAC,SAAA,EAAAC,QAAA,kCAAA,KAAA,GAAA,OAAAT,EAAAE,KAAA,GAAAJ,mBAAAc,MAOiB/B,IAAAgC,SAAArB,IAPjB,KAAA,GAAA,GAQPgB,EAROR,EAAAc,KAAA,CAAAd,EAAAE,KAAA,GAAA,MAAA,OAAAF,EAAAK,OAAA,SAAAnB,EAAAoB,OAAA,KAAAC,KAAA,CA0BPC,SAAQ,EA1BDC,QAAA,4BAAA,KAAA,GAAA,OAAAT,EAAAE,KAAA,GAAAJ,mBAAAc,MA+Bc9B,wBAAwBW,EAAUsB,QAAQC,IAAIC,cA/B5D,KAAA,GAAA,OA+BTpB,EA/BSG,EAAAc,KAAAd,EAAAE,KAAA,GAAAJ,mBAAAc,MAAAjC,OAAAuC,OAAA,CAefC,WAAAA,EAoBI9B,kBAAAA,EAnCW+B,WAiBXzB,EAjBW0B,IAAA/B,iBAAAA,EAAAC,MAAAA,EAAAC,IAAAI,EAAAyB,IAwCX5B,UAAUI,EAAeyB,cAxCd,KAAA,GAAA,OAAAtB,EAAAc,KAAAd,EAAAE,KAAA,GAAAJ,mBAAAc,MAoBPH,KAAOc,mBApBA,KAAA,GAAAvB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAwB,GAAAxB,EAAA,MAAA,GAAA,KAAA,GAAA,IAAA,MAAA,OAAAA,EAAAyB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"Course.min.js","sourcesContent":["const Course = require(\"../models/Course\");\nconst Tag = require(\"../models/tags\");\nconst User = require(\"../models/User\");\nconst {uploadImageToCloudinary} = require(\"../utils/imageUploader\");\n\nexports.createCourse = async (req , res) => {\n    try{\n        const {courseName, courseDescription, whatYouWillLearn,price, tag} = req.body;\n\n        const thumbnail = req.files.thumbnailImage;\n\n        if(!courseName || !courseDescription || !whatYouWillLearn || !price || !tag || !thumbnail) {\n            return res.status(400).json({\n                success:false,\n                message:'All fields are required',\n            });\n        }\n\n        const userId = req.user.id;\n        const instructorDetails = await User.findById(userId);\n        console.log(\"Instructor Details:\" , instructorDetails);\n\n        if(!instructorDetails) {\n            return res.status(404).json({\n                success:false,\n                message:'Instructor Details not found',\n            });\n        }\n        const tagDetails = await Tag.findById(tag);\n        if(!tagDetails) {\n            return res.status(400).json({\n                success:false,\n                message:'Tags Details not found',\n            });\n        }\n\n        const thumbnailImage = await uploadImageToCloudinary(thumbnail,process.env.FOLDER_NAME);\n        \n        const newCourse = await Course.create({\n            courseName,\n            courseDescription,\n            instructor:instructorDetails._id,\n            whatYouWillLearn:whatYouWillLearn,\n            price,\n            tag:tagDetails._id,\n            thumbnail:thumbnailImage.secure_url,\n        })\n        \n        await User.findByIdAndUpdate\n    }\n    catch(error){\n\n    }\n};"]}