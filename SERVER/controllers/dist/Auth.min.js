"use strict";var User=require("../models/User"),OTP=require("../models/OTP"),otpGenerator=require("otp-generator");exports.sendOTP=function(r,t){var s,a,n,o,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=r.body.email,e.next=4,regeneratorRuntime.awrap(User.findOne({email:s}));case 4:if(e.sent)return e.abrupt("return",t.status(401).json({success:!1,message:"User already registered"}));e.next=7;break;case 7:return a=otpGenerator.generate(6,{upperCaseAlphabets:!1,lowerCaseAlphabets:!1,specialChars:!1}),console.log("OTP generated:",a),e.next=11,regeneratorRuntime.awrap(OTP.findOne({otp:a}));case 11:n=e.sent;case 12:if(n)return a=otpGenerator.generate(6,{upperCaseAlphabets:!1,lowerCaseAlphabets:!1,specialChars:!1}),e.next=16,regeneratorRuntime.awrap(OTP.findOne({otp:a}));e.next=19;break;case 16:n=e.sent,e.next=12;break;case 19:return o={email:s,otp:a},e.next=22,regeneratorRuntime.awrap(OTP.create(o));case 22:u=e.sent,console.log(u),t.status(200).json({success:!0,message:"otp sent successfully",otp:a}),e.next=31;break;case 27:return e.prev=27,e.t0=e.catch(0),console.log(e.t0),e.abrupt("return",t.status(500).json({success:!1,message:e.t0.message}));case 31:case"end":return e.stop()}},null,null,[[0,27]])},exports.signUp=function(r,t){var s,a,n,o,u,c,i,p,l,m,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.body,a=s.firstName,n=s.lastName,o=s.email,u=s.password,c=s.confirmPassword,i=s.accountType,p=s.contactNumber,l=s.otp,a&&n&&o&&u&&c&&l){e.next=3;break}return e.abrupt("return",t.status(403).json({success:!1,message:"All fields are required"}));case 3:if(u!==c)return e.abrupt("return",t.status(400).json({success:!1,message:"Password and confirmpassword value does not match,please try again"}));e.next=5;break;case 5:return e.next=7,regeneratorRuntime.awrap(User.findOne({email:o}));case 7:if(e.sent)return e.abrupt("return",t.status(400).json({success:!1,message:"User is already registered"}));e.next=10;break;case 10:return e.next=12,regeneratorRuntime.awrap(OTP.find({email:o}).sort({createdAt:-1}).limit(1));case 12:if(m=e.sent,console.log(m),0==m.length)return e.abrupt("return",t.status(400).json({success:!1,message:"otp found"}));e.next=18;break;case 18:if(l!==m.otp)return e.abrupt("return",t.status(400).json({success:!1,message:"Invalid otp"}));e.next=20;break;case 20:return e.next=22,regeneratorRuntime.awrap(bcrypt.hash(u,10));case 22:return d=e.sent,e.next=25,regeneratorRuntime.awrap(User.create({firstName:a,lastName:n,email:o,contactNumber:p,password:d,accountType:i,additionalDetails:additionalDetails}));case 25:e.sent;case 26:case"end":return e.stop()}})};
//# sourceMappingURL=Auth.min.js.map
