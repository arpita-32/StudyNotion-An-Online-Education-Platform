"use strict";var _require=require("../config/razorpay"),instance=_require.instance,Course=require("../models/Course"),User=require("../models/User"),mailSender=require("../utils/mailSender"),_require2=require("../mail/courseEnrollmentEmail"),courseEnrollmentEmail=_require2.courseEnrollmentEmail;exports.capturePayment=function(r,s){var n,t,a,u,o,c,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=r.body.course_id,t=r.user.id,n){e.next=4;break}return e.abrupt("return",s.json({success:!1,message:"Please provide valid course otp"}));case 4:return e.prev=5,e.next=8,regeneratorRuntime.awrap(Course.findById(n));case 8:if(a=e.sent){e.next=11;break}return e.abrupt("return",s.json({success:!1,message:"could not find the course"}));case 11:if(u=new mongoose.Types.ObjectId(t),a.studentsEnrolled.includes(u))return e.abrupt("return",s.status(200).json({success:!1,message:"student is already enrolled"}));e.next=15;break;case 15:e.next=21;break;case 17:return e.prev=17,e.t0=e.catch(5),console.error(e.t0),e.abrupt("return",s.status(500).json({success:!1,message:e.t0.message}));case 21:return o=a.price,c={amount:100*o,currency:"INR",receipt:Math.random(Date.now()).toString(),notes:{courseId:n,userId:t}},e.prev=24,e.next=27,regeneratorRuntime.awrap(instance.orders.create(c));case 27:return i=e.sent,console.log(i),e.abrupt("return",s.status(200).json({success:!0,courseName:a.courseName,courseDescription:a.courseDescription,thumbnail:a.thumbnail,orderId:i.id,currency:i.currency,amount:i.amount,message:""}));case 32:e.prev=32,e.t1=e.catch(24),console.log(e.t1),s.json({success:!1,message:"could not initiate  order"});case 36:case"end":return e.stop()}},null,null,[[5,17],[24,32]])},exports.verifySignature=function(r,s){var n,t,a,u,o,c,i,d;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if("12345678",n=r.headers["x-razorpay-signature"],(t=crypto.createHmac("sha256","12345678")).update(JSON.stringify(r.body)),a=t.digest("hex"),n===a)return console.log("payment is auhorised"),u=r.body.payload.payment.entity.notes,o=u.courseId,c=u.userId,e.prev=8,e.next=11,regeneratorRuntime.awrap(Course.findOneAndUpdate({_id:o},{$push:{studentsEnrolled:c}},{new:!0}));e.next=30;break;case 11:if(i=e.sent){e.next=14;break}return e.abrupt("return",s.status(500).json({success:!1,message:"course not found"}));case 14:return console.log(i),e.next=17,regeneratorRuntime.awrap(User.findOneAndUpdate({_id:c},{$push:{courses:o}},{new:!0}));case 17:return d=e.sent,console.log(d),e.next=21,regeneratorRuntime.awrap(mailSender(d.email,"Congratulaions"));case 21:return e.sent,e.abrupt("return",s.status(200).json({success:!0,message:"signature verified and course added"}));case 25:return e.prev=25,e.t0=e.catch(8),e.abrupt("return",s.status(500).json({success:!1,message:e.t0.message}));case 28:e.next=31;break;case 30:return e.abrupt("return",s.status(400).json({success:!1,message:"Invalid request"}));case 31:case"end":return e.stop()}},null,null,[[8,25]])};
//# sourceMappingURL=Payment.min.js.map
