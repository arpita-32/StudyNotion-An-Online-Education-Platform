{"version":3,"sources":["index.js"],"names":["express","require","app","userRoutes","profileRoutes","paymentRoutes","courseRoutes","database","cookieParser","cors","cloudinaryConnect","fileUpload","dotenv","config","PORT","process","env","connect","use","json","origin","credentials","useTempFiles","tempFileDir","get","req","res","success","message","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AAEA,IAAMG,UAAU,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMG,aAAa,GAAGH,OAAO,CAAC,kBAAD,CAA7B;;AACA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,mBAAD,CAA7B;;AACA,IAAMK,YAAY,GAAGL,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAMM,QAAQ,GAAGN,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAMO,YAAY,GAAGP,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMQ,IAAI,GAAGR,OAAO,CAAC,MAAD,CAApB;;eAE4BA,OAAO,CAAC,qBAAD,C;IAA5BS,iB,YAAAA,iB;;AACP,IAAMC,UAAU,GAAGV,OAAO,CAAC,oBAAD,CAA1B;;AACA,IAAMW,MAAM,GAAGX,OAAO,CAAC,QAAD,CAAtB;;AAEAW,MAAM,CAACC,MAAP;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAP,QAAQ,CAACU,OAAT;AAEAf,GAAG,CAACgB,GAAJ,CAAQlB,OAAO,CAACmB,IAAR,EAAR;AACAjB,GAAG,CAACgB,GAAJ,CAAQV,YAAR;AACAN,GAAG,CAACgB,GAAJ,CACIT,IAAI,CAAC;AACDW,EAAAA,MAAM,EAAC,uBADN;AAEDC,EAAAA,WAAW,EAAC;AAFX,CAAD,CADR;AAOAnB,GAAG,CAACgB,GAAJ,CACIP,UAAU,CAAC;AACPW,EAAAA,YAAY,EAAC,IADN;AAEPC,EAAAA,WAAW,EAAC;AAFL,CAAD,CADd;AAOAb,iBAAiB;AAEjBR,GAAG,CAACgB,GAAJ,CAAQ,cAAR,EAAwBf,UAAxB;AACAD,GAAG,CAACgB,GAAJ,CAAQ,iBAAR,EAA2Bd,aAA3B;AACAF,GAAG,CAACgB,GAAJ,CAAQ,gBAAR,EAA0BZ,YAA1B;AACAJ,GAAG,CAACgB,GAAJ,CAAQ,iBAAR,EAA2Bb,aAA3B;AAGAH,GAAG,CAACsB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,SAAOA,GAAG,CAACP,IAAJ,CAAS;AACZQ,IAAAA,OAAO,EAAC,IADI;AAEZC,IAAAA,OAAO,EAAC;AAFI,GAAT,CAAP;AAIH,CALD;AAOA1B,GAAG,CAAC2B,MAAJ,CAAWf,IAAX,EAAiB,YAAM;AACnBgB,EAAAA,OAAO,CAACC,GAAR,6BAAiCjB,IAAjC;AACH,CAFD","sourcesContent":["const express = require(\"express\");\nconst app = express();\n\nconst userRoutes = require(\"./routes/User\");\nconst profileRoutes = require(\"./routes/Profile\");\nconst paymentRoutes = require(\"./routes/Payments\");\nconst courseRoutes = require(\"./routes/Course\");\n\nconst database = require(\"./config/database\");\nconst cookieParser = require(\"cookie-parser\");\nconst cors = require(\"cors\");\n\nconst {cloudinaryConnect} = require(\"./config/cloudinary\");\nconst fileUpload = require(\"express-fileUpload\");\nconst dotenv = require(\"dotenv\");\n\ndotenv.config();\nconst PORT = process.env.PORT || 4000;\n\ndatabase.connect();\n\napp.use(express.json());\napp.use(cookieParser);\napp.use(\n    cors({\n        origin:\"http://localhost:3000\",\n        credentials:true,\n    })\n)\n\napp.use(\n    fileUpload({\n        useTempFiles:true,\n        tempFileDir:\"/tmp\",\n    })\n)\n\ncloudinaryConnect();\n\napp.use(\"/api/v1/auth\", userRoutes);\napp.use(\"/api/v1/profile\", profileRoutes);\napp.use(\"/api/v1/course\", courseRoutes);\napp.use(\"/api/v1/payment\", paymentRoutes);\n\n\napp.get(\"/\", (req, res) => {\n    return res.json({\n        success:true,\n        message:'your server is up and running'\n    });\n});\n\napp.listen(PORT, () => {\n    console.log(`App is running at ${PORT}`)\n}\n\n)"],"file":"index.dev.js"}