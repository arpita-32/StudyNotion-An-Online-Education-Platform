{"version":3,"sources":["auth.js"],"names":["jwt","require","config","User","exports","auth","req","res","next","console","log","cookies","token","body","header","replace","undefined","status","json","success","message","decode","verify","process","env","JWT_SECRET","user","e","err","isStudent","accountType","isInstructor","isAdmin"],"mappings":";;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMC,IAAI,GAAGF,OAAO,CAAC,gBAAD,CAApB;;AAEAG,OAAO,CAACC,IAAR,GAAe,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,MAAI;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,GAAG,CAACK,OAAJ,CAAYC,KAAlC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,GAAG,CAACO,IAAJ,CAASD,KAA7B;AAGA,QAAMA,KAAK,GAAGN,GAAG,CAACK,OAAJ,CAAYC,KAAZ,IAAqBN,GAAG,CAACO,IAAJ,CAASD,KAA9B,IAAuCN,GAAG,CAACQ,MAAJ,CAAW,eAAX,EAA4BC,OAA5B,CAAoC,QAApC,EAA6C,EAA7C,CAArD,CANA,CAOA;;AAEA,QAAI,CAACH,KAAD,IAAUA,KAAK,KAAKI,SAAxB,EAAmC;AAC/B,aAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE,KADe;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAArB,CAAP;AAIH,KAdD,CAgBA;;;AACA,QAAI;AACA,UAAMC,MAAM,GAAGrB,GAAG,CAACsB,MAAJ,CAAWV,KAAX,EAAkBW,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAf;AAEAhB,MAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ;AAEAf,MAAAA,GAAG,CAACoB,IAAJ,GAAWL,MAAX;AACH,KAND,CAOA,OAAOM,CAAP,EAAU;AACN,aAAOpB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE,KADe;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAArB,CAAP;AAIH;;AAEDZ,IAAAA,IAAI;AACP,GAhCD,CAiCA,OAAOoB,GAAP,EAAY;AACRnB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACA,WAAOrB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE,KADe;AAExBC,MAAAA,OAAO,EAAE;AAFe,KAArB,CAAP;AAIH;AACJ,CAzCD;;AA2CAhB,OAAO,CAACyB,SAAR,GAAoB,UAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpC,MAAI;AACA,QAAIF,GAAG,CAACoB,IAAJ,CAASI,WAAT,KAAyB,SAA7B,EAAwC;AACpC,aAAOvB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE,KADe;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAArB,CAAP;AAIH;;AACDZ,IAAAA,IAAI;AACP,GARD,CASA,OAAOoB,GAAP,EAAY;AACR,WAAOrB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE,KADe;AAExBC,MAAAA,OAAO,EAAE;AAFe,KAArB,CAAP;AAIH;AACJ,CAhBD;;AAiBAhB,OAAO,CAAC2B,YAAR,GAAuB,UAACzB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,MAAI;AACA,QAAIF,GAAG,CAACoB,IAAJ,CAASI,WAAT,KAAyB,YAA7B,EAA2C;AACvC,aAAOvB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE,KADe;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAArB,CAAP;AAIH;;AACDZ,IAAAA,IAAI;AACP,GARD,CASA,OAAOoB,GAAP,EAAY;AACR,WAAOrB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE,KADe;AAExBC,MAAAA,OAAO,EAAE;AAFe,KAArB,CAAP;AAIH;AACJ,CAhBD;;AAiBAhB,OAAO,CAAC4B,OAAR,GAAkB,UAAC1B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC,MAAI;AACA,QAAIF,GAAG,CAACoB,IAAJ,CAASI,WAAT,KAAyB,OAA7B,EAAsC;AAClC,aAAOvB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,QAAAA,OAAO,EAAE,KADe;AAExBC,QAAAA,OAAO,EAAE;AAFe,OAArB,CAAP;AAIH;;AACDZ,IAAAA,IAAI;AACP,GARD,CASA,OAAOoB,GAAP,EAAY;AACR,WAAOrB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAE,KADe;AAExBC,MAAAA,OAAO,EAAE;AAFe,KAArB,CAAP;AAIH;AACJ,CAhBD","sourcesContent":["const jwt = require(\"jsonwebtoken\")\nrequire(\"dotenv\").config();\nconst User = require(\"../models/User\");\n\nexports.auth = (req, res, next) => {\n    try {\n\n        console.log(\"cookie\", req.cookies.token);\n        console.log(\"body\", req.body.token);\n\n\n        const token = req.cookies.token || req.body.token || req.header(\"Authorization\").replace(\"Bearer\",\"\");\n        // const token = req.cookie.token\n\n        if (!token || token === undefined) {\n            return res.status(401).json({\n                success: false,\n                message: \"token missing\"\n            });\n        }\n\n        // verify the token\n        try {\n            const decode = jwt.verify(token, process.env.JWT_SECRET);\n\n            console.log(decode);\n\n            req.user = decode;\n        }\n        catch (e) {\n            return res.status(401).json({\n                success: false,\n                message: \"token is invalid\"\n            })\n        }\n\n        next();\n    }\n    catch (err) {\n        console.log(err)\n        return res.status(401).json({\n            success: false,\n            message: \"Something went wrong while verifying token\"\n        })\n    }\n}\n\nexports.isStudent = (req, res, next) => {\n    try {\n        if (req.user.accountType !== \"Student\") {\n            return res.status(401).json({\n                success: false,\n                message: \"This is a protect route for students you can not access it\"\n            })\n        }\n        next();\n    }\n    catch (err) {\n        return res.status(500).json({\n            success: false,\n            message: \"User Role is cannot be verified\"\n        })\n    }\n}\nexports.isInstructor = (req, res, next) => {\n    try {\n        if (req.user.accountType !== \"Instructor\") {\n            return res.status(401).json({\n                success: false,\n                message: \"This is a protect route for Instructor only\"\n            })\n        }\n        next();\n    }\n    catch (err) {\n        return res.status(500).json({\n            success: false,\n            message: \"Instructor is not Matching\"\n        })\n    }\n}\nexports.isAdmin = (req, res, next) => {\n    try {\n        if (req.user.accountType !== \"Admin\") {\n            return res.status(401).json({\n                success: false,\n                message: \"This is a protect route for Admins,you can not access it\"\n            })\n        }\n        next();\n    }\n    catch (err) {\n        return res.status(500).json({\n            success: false,\n            message: \"User Role is not Matching\"\n        })\n    }\n}"],"file":"auth.dev.js"}