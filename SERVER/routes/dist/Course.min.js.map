{"version":3,"sources":["Course.js"],"names":["express","require","router","Router","deleteCourse","createCourse","getAllCourses","getCourseDetails","getFullCourseDetails","editCourse","getInstructorCourses","showAllCategories","createCategory","categoryPageDetails","createSection","updateSection","deleteSection","createRating","createSubSection","updateSubSection","deleteSubSection","getAverageRating","getAllRating","isStudent","updateCourseProgress","auth","isInstructor","isAdmin","post","get","module","exports"],"mappings":"aACA,IAAMA,QAAUC,QAAQ,WADxBC,OAAAF,QAAAG,kBAcEC,QAAAA,yBANAC,sBAAAA,aACAC,uBAAAA,cACAC,0BAAAA,iBACAC,8BAAAA,qBACAC,oBAAAA,WACAC,8BAAAA,qBACAN,sBAAAA,uBASEH,QAAQ,2BAHVU,4BAAAA,kBACAC,yBAAAA,eACAC,8BAAAA,8BAQEZ,QAAQ,0BAHVa,wBAAAA,cACAC,wBAAAA,cACAC,wBAAAA,wBAYAC,QAAAA,6BAPAC,2BAAAA,iBACAC,2BAAAA,iBACAC,2BAAAA,2BAQEnB,QAAQ,kCAHVgB,uBAAAA,aACAI,2BAAAA,iBACAC,uBAAAA,uBAQ0BC,QAAAA,iCAJ1BC,+BAAAA,+BAQFvB,QAAA,uBAAAwB,eAAAA,KAAAC,uBAAAA,aAAAH,oBAAAA,UAAAI,kBAAAA,QAGAzB,OAAO0B,KAAK,gBAAiBH,KAAMC,aAAcrB,cAEjDH,OAAO0B,KAAK,cAAeH,KAAMC,aAAcZ,eAE/CZ,OAAO0B,KAAK,iBAAkBH,KAAMC,aAAcX,eAElDb,OAAO0B,KAAK,iBAAkBH,KAAMC,aAAcV,eAElDd,OAAO0B,KAAK,oBAAqBH,KAAMC,aAAcP,kBAErDjB,OAAO0B,KAAK,oBAAqBH,KAAMC,aAAcN,kBAErDlB,OAAO0B,KAAK,iBAAkBH,KAAMC,aAAcR,kBAElDhB,OAAO0B,KAAK,iBAAkBtB,eAE9BJ,OAAO0B,KAAK,oBAAqBrB,kBAEjCL,OAAO0B,KAAK,wBAAyBH,KAAMjB,sBAE3CN,OAAO0B,KAAK,cAAeH,KAAMC,aAAcjB,YAM/CP,OAAO0B,IAAP,wBAAAH,KAAAC,aAAsDF,sBAItDtB,OAAA,OAAA,gBAAAE,cAEAF,OAAA0B,KAAA,wBAAAH,KAAAF,UAAAC,sBACAtB,OAAO0B,KAAK,kBAAmBH,KAAME,QAASf,gBAO9CV,OAAO0B,IAAP,qBAAAjB,mBACAT,OAAO2B,KAAI,0BAAqBR,qBADhCnB,OAAO0B,KAAK,gBAAiBH,KAAMF,UAAWN,cAC9Cf,OAAO2B,IAAI,oBAAqBR,kBAChCnB,OAAO2B,IAAI,cAAeP,cAE1BQ,OAAOC,QAAU7B","file":"Course.min.js","sourcesContent":["// Import the required modules\nconst express = require(\"express\")\nconst router = express.Router()\n\n// Import the Controllers\n\n// Course Controllers Import\nconst {\n  createCourse,\n  getAllCourses,\n  getCourseDetails,\n  getFullCourseDetails,\n  editCourse,\n  getInstructorCourses,\n  deleteCourse,\n} = require(\"../controllers/Course\")\n\n\n// Categories Controllers Import\nconst {\n  showAllCategories,\n  createCategory,\n  categoryPageDetails,\n} = require(\"../controllers/Category\")\n\n// Sections Controllers Import\nconst {\n  createSection,\n  updateSection,\n  deleteSection,\n} = require(\"../controllers/Section\")\n\n// Sub-Sections Controllers Import\nconst {\n  createSubSection,\n  updateSubSection,\n  deleteSubSection,\n} = require(\"../controllers/Subsection\")\n\n// Rating Controllers Import\nconst {\n  createRating,\n  getAverageRating,\n  getAllRating,\n} = require(\"../controllers/RatingAndReview\")\n\nconst {\n  updateCourseProgress\n} = require(\"../controllers/courseProgress\");\n\n// Importing Middlewares\nconst { auth, isInstructor, isStudent, isAdmin } = require(\"../middlewares/auth\")\n\n// ********************************************************************************************************\n//                                      Course routes\n// ********************************************************************************************************\n\n// Courses can Only be Created by Instructors\nrouter.post(\"/createCourse\", auth, isInstructor, createCourse)\n//Add a Section to a Course\nrouter.post(\"/addSection\", auth, isInstructor, createSection)\n// Update a Section\nrouter.post(\"/updateSection\", auth, isInstructor, updateSection)\n// Delete a Section\nrouter.post(\"/deleteSection\", auth, isInstructor, deleteSection)\n// Edit Sub Section\nrouter.post(\"/updateSubSection\", auth, isInstructor, updateSubSection)\n// Delete Sub Section\nrouter.post(\"/deleteSubSection\", auth, isInstructor, deleteSubSection)\n// Add a Sub Section to a Section\nrouter.post(\"/addSubSection\", auth, isInstructor, createSubSection)\n// Get all Registered Courses\nrouter.post(\"/getAllCourses\", getAllCourses)\n// Get Details for a Specific Courses\nrouter.post(\"/getCourseDetails\", getCourseDetails)\n// Get Details for a Specific Courses\nrouter.post(\"/getFullCourseDetails\", auth, getFullCourseDetails)\n// Edit Course routes\nrouter.post(\"/editCourse\", auth, isInstructor, editCourse)\n// Get all Courses Under a Specific Instructor\nrouter.get(\"/getInstructorCourses\", auth, isInstructor, getInstructorCourses)\n// Delete a Course\nrouter.delete(\"/deleteCourse\", deleteCourse)\n\nrouter.post(\"/updateCourseProgress\", auth, isStudent, updateCourseProgress);\n\n// ********************************************************************************************************\n//                                      Category routes (Only by Admin)\n// ********************************************************************************************************\n// Category can Only be Created by Admin\n// TODO: Put IsAdmin Middleware here\nrouter.post(\"/createCategory\", auth, isAdmin, createCategory)\nrouter.get(\"/showAllCategories\", showAllCategories)\nrouter.post(\"/getCategoryPageDetails\", categoryPageDetails)\n\n// ********************************************************************************************************\n//                                      Rating and Review\n// ********************************************************************************************************\nrouter.post(\"/createRating\", auth, isStudent, createRating)\nrouter.get(\"/getAverageRating\", getAverageRating)\nrouter.get(\"/getReviews\", getAllRating)\n\nmodule.exports = router"]}