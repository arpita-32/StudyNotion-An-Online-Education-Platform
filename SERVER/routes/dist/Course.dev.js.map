{"version":3,"sources":["Course.js"],"names":["express","require","router","Router","createCourse","getAllCourses","getCourseDetails","getFullCourseDetails","editCourse","getInstructorCourses","deleteCourse","showAllCategories","createCategory","categoryPageDetails","createSection","updateSection","deleteSection","createSubSection","updateSubSection","deleteSubSection","createRating","getAverageRating","getAllRating","updateCourseProgress","auth","isInstructor","isStudent","isAdmin","post","get","module","exports"],"mappings":"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","sourcesContent":["// Import the required modules\nconst express = require(\"express\")\nconst router = express.Router()\n\n// Import the Controllers\n\n// Course Controllers Import\nconst {\n  createCourse,\n  getAllCourses,\n  getCourseDetails,\n  getFullCourseDetails,\n  editCourse,\n  getInstructorCourses,\n  deleteCourse,\n} = require(\"../controllers/Course\")\n\n\n// Categories Controllers Import\nconst {\n  showAllCategories,\n  createCategory,\n  categoryPageDetails,\n} = require(\"../controllers/Category\")\n\n// Sections Controllers Import\nconst {\n  createSection,\n  updateSection,\n  deleteSection,\n} = require(\"../controllers/Section\")\n\n// Sub-Sections Controllers Import\nconst {\n  createSubSection,\n  updateSubSection,\n  deleteSubSection,\n} = require(\"../controllers/Subsection\")\n\n// Rating Controllers Import\nconst {\n  createRating,\n  getAverageRating,\n  getAllRating,\n} = require(\"../controllers/RatingAndReview\")\n\nconst {\n  updateCourseProgress\n} = require(\"../controllers/courseProgress\");\n\n// Importing Middlewares\nconst { auth, isInstructor, isStudent, isAdmin } = require(\"../middlewares/auth\")\n\n// ********************************************************************************************************\n//                                      Course routes\n// ********************************************************************************************************\n\n// Courses can Only be Created by Instructors\nrouter.post(\"/createCourse\", auth, isInstructor, createCourse)\n//Add a Section to a Course\nrouter.post(\"/addSection\", auth, isInstructor, createSection)\n// Update a Section\nrouter.post(\"/updateSection\", auth, isInstructor, updateSection)\n// Delete a Section\nrouter.post(\"/deleteSection\", auth, isInstructor, deleteSection)\n// Edit Sub Section\nrouter.post(\"/updateSubSection\", auth, isInstructor, updateSubSection)\n// Delete Sub Section\nrouter.post(\"/deleteSubSection\", auth, isInstructor, deleteSubSection)\n// Add a Sub Section to a Section\nrouter.post(\"/addSubSection\", auth, isInstructor, createSubSection)\n// Get all Registered Courses\nrouter.post(\"/getAllCourses\", getAllCourses)\n// Get Details for a Specific Courses\nrouter.post(\"/getCourseDetails\", getCourseDetails)\n// Get Details for a Specific Courses\nrouter.post(\"/getFullCourseDetails\", auth, getFullCourseDetails)\n// Edit Course routes\nrouter.post(\"/editCourse\", auth, isInstructor, editCourse)\n// Get all Courses Under a Specific Instructor\nrouter.get(\"/getInstructorCourses\", auth, isInstructor, getInstructorCourses)\n// Delete a Course\nrouter.delete(\"/deleteCourse\", deleteCourse)\n\nrouter.post(\"/updateCourseProgress\", auth, isStudent, updateCourseProgress);\n\n// ********************************************************************************************************\n//                                      Category routes (Only by Admin)\n// ********************************************************************************************************\n// Category can Only be Created by Admin\n// TODO: Put IsAdmin Middleware here\nrouter.post(\"/createCategory\", auth, isAdmin, createCategory)\nrouter.get(\"/showAllCategories\", showAllCategories)\nrouter.post(\"/getCategoryPageDetails\", categoryPageDetails)\n\n// ********************************************************************************************************\n//                                      Rating and Review\n// ********************************************************************************************************\nrouter.post(\"/createRating\", auth, isStudent, createRating)\nrouter.get(\"/getAverageRating\", getAverageRating)\nrouter.get(\"/getReviews\", getAllRating)\n\nmodule.exports = router"],"file":"Course.dev.js"}