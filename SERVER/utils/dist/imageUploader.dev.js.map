{"version":3,"sources":["imageUploader.js"],"names":["cloudinary","require","v2","exports","uploadImageToCloudinary","file","folder","innerHeight","quality","options","height","resource_type","uploader","upload","tempFilePath"],"mappings":";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,EAAzC;;AAEAC,OAAO,CAACC,uBAAR,GAAkC,iBAAOC,IAAP,EAAaC,MAAb,EAAqBC,WAArB,EAAkCC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,UAAAA,OADwB,GACd;AAAEH,YAAAA,MAAM,EAANA;AAAF,WADc,EACF;;AAC5B,cAAIC,WAAJ,EAAiB;AAAE;AACfE,YAAAA,OAAO,CAACC,MAAR,GAAiBH,WAAjB;AACH;;AACD,cAAIC,OAAJ,EAAa;AACTC,YAAAA,OAAO,CAACD,OAAR,GAAkBA,OAAlB;AACH;;AACDC,UAAAA,OAAO,CAACE,aAAR,GAAwB,MAAxB,CAR8B,CAQE;;AARF;AAAA,0CAUjBX,UAAU,CAACY,QAAX,CAAoBC,MAApB,CAA2BR,IAAI,CAACS,YAAhC,EAA8CL,OAA9C,CAViB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlC","sourcesContent":["const cloudinary = require('cloudinary').v2;\n\nexports.uploadImageToCloudinary = async (file, folder, innerHeight, quality) => {\n    const options = { folder }; // Initialize options with the folder\n    if (innerHeight) { // Use the correct parameter\n        options.height = innerHeight;\n    }\n    if (quality) {\n        options.quality = quality;\n    }\n    options.resource_type = \"auto\"; // Ensure resource type is set\n\n    return await cloudinary.uploader.upload(file.tempFilePath, options);\n};\n"],"file":"imageUploader.dev.js"}