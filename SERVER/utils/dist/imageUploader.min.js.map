{"version":3,"sources":["imageUploader.js"],"names":["cloudinary","require","v2","exports","file","folder","innerHeight","quality","options","regeneratorRuntime","async","_context","prev","next","height","awrap","uploader","upload","tempFilePath","abrupt","sent","stop"],"mappings":"aAAA,IAAMA,WAAaC,QAAQ,cAAcC,GAAzCC,QAAMH,wBAAqB,SAA3BI,EAAAC,EAAAC,EAAAC,GAA2B,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAGjBL,EAAU,CAACH,OAAAA,GADdS,SAA2BN,EAAAM,OAAAA,QAAAP,IAAAC,EAAAD,QAAAA,GACxBC,EAAAA,cAAU,OAHOG,EAAAE,KAAA,EAAAJ,mBAAAM,MAEOf,WAAAgB,SAAAC,OAAAb,EAAAc,aAAAV,IAFP,KAAA,EAAA,OAAAG,EAAAQ,OAAA,SAAAR,EAAAS,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAT,EAAAU","file":"imageUploader.min.js","sourcesContent":["const cloudinary = require('cloudinary').v2\n\nexports.uploadImageToCloudinary = async (file, folder, innerHeight, quality) => {\n    const options = {folder};\n    if(height) {\n        options.height = height;\n    }\n    if(quality) {\n        options.quality = quality;\n    }\n    options.resource_type = \"auto\";\n\n    return await cloudinary.uploader.upload(file.tempFilePath, options);\n}"]}