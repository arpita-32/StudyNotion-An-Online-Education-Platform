{"version":3,"sources":["Section.js"],"names":["Section","require","Course","exports","createSection","req","res","_req$body","_sectionName","courseId","newSection","updateCourseDetails","regeneratorRuntime","async","_context","prev","next","body","sectionName","abrupt","status","json","success","message","awrap","sent","findByIdAndUpdate","$push","courseContent","_id","t0","stop","updateSection","_req$body2","_sectionName2","sectionId","_context2","new","deleteSection","_context3","params","findByIdAndDelete"],"mappings":"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","file":"Section.min.js","sourcesContent":["const Section = require(\"../models/Section\");\nconst Course = require(\"../models/Course\");\n\nexports.createSection = async (req,res) => {\n    try{\n        const {sectionName, courseId} = req.body;\n\n        if(!sectionName || !courseId){\n            return res.status(400).json({\n                success:false,\n                message:'Missing properties',\n            });\n        }\n        \n        const newSection = await Section.create({sectionName});\n\n        const updateCourseDetails = await Course.findByIdAndUpdate(\n            courseId,\n            {\n                $push:{\n                    courseContent:newSection._id,\n                }\n            },\n            {new:true},\n        );\n        return res.status(200).json({\n            success:true,\n            message:'Section creates successfully',\n            updateCourseDetails,\n        });\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            message:'unable to create section please try again',\n        });\n    }\n}\n\nexports.updateSection = async (req,res) => {\n    try{\n        const {sectionName, sectionId} = req.body;\n\n        if(!sectionName || !sectionId){\n            return res.status(400).json({\n                success:false,\n                message:'Missing properties',\n            });\n        }\n\n        const section = await Section.findByIdAndUpdate(sectionId, {sectionName}, {new:true});\n        return res.status(200).json({\n            success:true,\n            message:'Section updated successfully',\n            \n        });\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            message:'unable to update section please try again',\n        });\n    }\n}\nexports.deleteSection = async (req,res) => {\n    try{\n        const {sectionId} = req.params\n\n        if(!sectionName || !sectionId){\n            return res.status(400).json({\n                success:false,\n                message:'Missing properties',\n            });\n        }\n\n        await Section.findByIdAndDelete(sectionId);\n        return res.status(200).json({\n            success:true,\n            message:'Section delete successfully',\n            \n        });\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            message:'unable to delete section please try again',\n        });\n    }\n}"]}