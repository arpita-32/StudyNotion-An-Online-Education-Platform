{"version":3,"sources":["Profile.js"],"names":["Profile","require","User","exports","updateProfile","req","res","body","dateOfBirth","about","contactNumber","gender","id","user","status","json","success","message","findById","userDetails","profileId","additionalDetails","profileDetails","save","error","deleteAccount","findByIdAndDelete","_id","updatedSection","getAllUserDetails","populate","exec"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,mBAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AAEAE,OAAO,CAACC,aAAR,GAAwB,iBAAOC,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAE8CD,GAAG,CAACE,IAFlD,oCAETC,WAFS,EAETA,WAFS,sCAEK,EAFL,sDAESC,KAFT,EAESA,KAFT,gCAEiB,EAFjB,oBAEqBC,aAFrB,aAEqBA,aAFrB,EAEoCC,MAFpC,aAEoCA,MAFpC;AAIVC,UAAAA,EAJU,GAILP,GAAG,CAACQ,IAAJ,CAASD,EAJJ;;AAAA,gBAMb,CAACF,aAAD,IAAkB,CAACC,MAAnB,IAA6B,CAACC,EANjB;AAAA;AAAA;AAAA;;AAAA,2CAOLN,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,KADgB;AAExBC,YAAAA,OAAO,EAAC;AAFgB,WAArB,CAPK;;AAAA;AAAA;AAAA,0CAaUf,IAAI,CAACgB,QAAL,CAAcN,EAAd,CAbV;;AAAA;AAaVO,UAAAA,WAbU;AAcVC,UAAAA,SAdU,GAcED,WAAW,CAACE,iBAdd;AAAA;AAAA,0CAearB,OAAO,CAACkB,QAAR,CAAiBE,SAAjB,CAfb;;AAAA;AAeVE,UAAAA,cAfU;AAiBhBA,UAAAA,cAAc,CAACd,WAAf,GAA6BA,WAA7B;AACAc,UAAAA,cAAc,CAACb,KAAf,GAAuBA,KAAvB;AACAa,UAAAA,cAAc,CAACX,MAAf,GAAwBA,MAAxB;AACAW,UAAAA,cAAc,CAACZ,aAAf,GAA+BA,aAA/B;AApBgB;AAAA,0CAqBVY,cAAc,CAACC,IAAf,EArBU;;AAAA;AAAA,2CAuBTjB,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,IADgB;AAExBC,YAAAA,OAAO,EAAC,8BAFgB;AAGxBK,YAAAA,cAAc,EAAdA;AAHwB,WAArB,CAvBS;;AAAA;AAAA;AAAA;AAAA,2CA8BThB,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,KADgB;AAExBQ,YAAAA,KAAK,EAAC,YAAMP;AAFY,WAArB,CA9BS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAsCAd,OAAO,CAACsB,aAAR,GAAwB,kBAAOpB,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVM,UAAAA,EAFU,GAELP,GAAG,CAACQ,IAAJ,CAASD,EAFJ;AAAA;AAAA,0CAIUV,IAAI,CAACgB,QAAL,CAAcN,EAAd,CAJV;;AAAA;AAIVO,UAAAA,WAJU;;AAAA,cAKZA,WALY;AAAA;AAAA;AAAA;;AAAA,4CAMLb,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,KADgB;AAExBC,YAAAA,OAAO,EAAC;AAFgB,WAArB,CANK;;AAAA;AAAA;AAAA,0CAYVjB,OAAO,CAAC0B,iBAAR,CAA0B;AAACC,YAAAA,GAAG,EAACR,WAAW,CAACE;AAAjB,WAA1B,CAZU;;AAAA;AAAA;AAAA,0CAcVnB,IAAI,CAACwB,iBAAL,CAAuB;AAACC,YAAAA,GAAG,EAACf;AAAL,WAAvB,CAdU;;AAAA;AAAA,4CAgBTN,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,IADgB;AAExBC,YAAAA,OAAO,EAAC,2BAFgB;AAGxBW,YAAAA,cAAc,EAAdA;AAHwB,WAArB,CAhBS;;AAAA;AAAA;AAAA;AAAA,4CAuBTtB,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,KADgB;AAExBC,YAAAA,OAAO,EAAC;AAFgB,WAArB,CAvBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAgCAd,OAAO,CAAC0B,iBAAR,GAA4B,kBAAOxB,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdM,UAAAA,EAFc,GAETP,GAAG,CAACQ,IAAJ,CAASD,EAFA;AAAA;AAAA,0CAGMV,IAAI,CAACgB,QAAL,CAAcN,EAAd,EAAkBkB,QAAlB,CAA2B,kBAA3B,EAA+CC,IAA/C,EAHN;;AAAA;AAGdZ,UAAAA,WAHc;AAAA,4CAMLb,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,IADgB;AAExBC,YAAAA,OAAO,EAAC;AAFgB,WAArB,CANK;;AAAA;AAAA;AAAA;AAAA,4CAgBbX,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,KADgB;AAExBC,YAAAA,OAAO,EAAC,aAAMA;AAFU,WAArB,CAhBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B","sourcesContent":["const Profile = require(\"../models/Profile\");\nconst User = require(\"../models/User\");\n\nexports.updateProfile = async (req,res) => {\n    try{\n        const {dateOfBirth = \"\", about = \"\", contactNumber, gender} = req.body;\n\n        const id = req.user.id;\n\n        if(!contactNumber || !gender || !id){\n            return res.status(400).json({\n                success:false,\n                message:'All fields are required',\n            });\n        }\n\n        const userDetails = await User.findById(id);\n        const profileId = userDetails.additionalDetails;\n        const profileDetails = await Profile.findById(profileId);\n\n        profileDetails.dateOfBirth = dateOfBirth;\n        profileDetails.about = about;\n        profileDetails.gender = gender;\n        profileDetails.contactNumber = contactNumber;\n        await profileDetails.save();\n\n        return res.status(200).json({\n            success:true,\n            message:'profile updated successfully',\n            profileDetails,\n        });\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            error:error.message,\n            \n        });\n    }\n}\n\nexports.deleteAccount = async (req,res) =>{\n    try{\n        const id = req.user.id;\n\n        const userDetails = await User.findById(id);\n        if(!userDetails){\n            return res.status(404).json({\n                success:false,\n                message:'user not found',\n            });\n        }\n\n        await Profile.findByIdAndDelete({_id:userDetails.additionalDetails});\n\n        await User.findByIdAndDelete({_id:id});\n\n        return res.status(200).json({\n            success:true,\n            message:'User deleted successfully',\n            updatedSection,\n            \n        });\n    }catch(error){\n        return res.status(500).json({\n            success:false,\n            message:'user cannot be deleted',\n            \n        });\n\n    }\n}\n\nexports.getAllUserDetails = async (req,res) =>{\n    try{\n        const id = req.user.id;\n        const userDetails = await User.findById(id).populate(\"additionalDeails\").exec();\n\n                \n                return res.status(200).json({\n                    success:true,\n                    message:'User data fetched successfully',\n\n                    \n                });\n\n\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            message:error.message,\n            \n        });\n    }\n}"],"file":"Profile.dev.js"}