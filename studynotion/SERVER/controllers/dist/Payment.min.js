"use strict";var stripe=require("stripe")(process.env.STRIPE_SECRET_KEY),Course=require("../models/Course"),User=require("../models/User"),mailSender=require("../utils/mailSender"),_require=require("../mail/courseEnrollmentEmail"),courseEnrollmentEmail=_require.courseEnrollmentEmail,mongoose=require("mongoose");exports.capturePayment=function(r,s){var t,n,u,a,c,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(t=r.body.course_id,n=r.user.id,t){e.next=4;break}return e.abrupt("return",s.status(400).json({success:!1,message:"Please provide a valid course ID"}));case 4:return e.prev=4,e.next=7,regeneratorRuntime.awrap(Course.findById(t));case 7:if(u=e.sent){e.next=10;break}return e.abrupt("return",s.status(404).json({success:!1,message:"Could not find the course"}));case 10:if(a=new mongoose.Types.ObjectId(n),u.studentsEnrolled.includes(a))return e.abrupt("return",s.status(400).json({success:!1,message:"Student is already enrolled"}));e.next=13;break;case 13:e.next=19;break;case 15:return e.prev=15,e.t0=e.catch(4),console.error(e.t0),e.abrupt("return",s.status(500).json({success:!1,message:"Error retrieving course details"}));case 19:return c=100*u.price,"INR",e.prev=21,e.next=24,regeneratorRuntime.awrap(stripe.paymentIntents.create({amount:c,currency:"INR",metadata:{courseId:t,userId:n}}));case 24:return o=e.sent,e.abrupt("return",s.status(200).json({success:!0,clientSecret:o.client_secret,courseName:u.courseName,courseDescription:u.courseDescription,thumbnail:u.thumbnail,amount:o.amount,currency:o.currency}));case 28:return e.prev=28,e.t1=e.catch(21),console.error(e.t1),e.abrupt("return",s.status(500).json({success:!1,message:"Could not initiate payment"}));case 32:case"end":return e.stop()}},null,null,[[4,15],[21,28]])},exports.handlePaymentSuccess=function(r,s){var t,n,u,a,c,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(t=r.body,n=t.course_id,u=t.user_id,n&&u){e.next=3;break}return e.abrupt("return",s.status(400).json({success:!1,message:"Course ID and User ID are required"}));case 3:return e.prev=3,e.next=6,regeneratorRuntime.awrap(Course.findByIdAndUpdate(n,{$push:{studentsEnrolled:u}},{new:!0}));case 6:if(a=e.sent){e.next=9;break}return e.abrupt("return",s.status(404).json({success:!1,message:"Course not found"}));case 9:return e.next=11,regeneratorRuntime.awrap(User.findByIdAndUpdate(u,{$push:{courses:n}},{new:!0}));case 11:if(c=e.sent){e.next=14;break}return e.abrupt("return",s.status(404).json({success:!1,message:"User not found"}));case 14:return e.next=16,regeneratorRuntime.awrap(mailSender(c.email,"Course Enrollment Success",courseEnrollmentEmail(a.courseName)));case 16:return o=e.sent,console.log("Email sent: ",o),e.abrupt("return",s.status(200).json({success:!0,message:"Payment successful and course enrollment updated"}));case 21:return e.prev=21,e.t0=e.catch(3),console.error(e.t0),e.abrupt("return",s.status(500).json({success:!1,message:"Error processing payment"}));case 25:case"end":return e.stop()}},null,null,[[3,21]])};
//# sourceMappingURL=Payment.min.js.map
