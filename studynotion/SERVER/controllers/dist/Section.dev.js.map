{"version":3,"sources":["Section.js"],"names":["Section","require","Course","exports","createSection","req","res","body","sectionName","courseId","status","json","success","message","create","newSection","findByIdAndUpdate","$push","courseContent","_id","updateCourseDetails","updateSection","sectionId","section","deleteSection","params","findByIdAndDelete"],"mappings":"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","sourcesContent":["const Section = require(\"../models/Section\");\nconst Course = require(\"../models/Course\");\n\nexports.createSection = async (req,res) => {\n    try{\n        const {sectionName, courseId} = req.body;\n\n        if(!sectionName || !courseId){\n            return res.status(400).json({\n                success:false,\n                message:'Missing properties',\n            });\n        }\n        \n        const newSection = await Section.create({sectionName});\n\n        const updateCourseDetails = await Course.findByIdAndUpdate(\n            courseId,\n            {\n                $push:{\n                    courseContent:newSection._id,\n                }\n            },\n            {new:true},\n        );\n        return res.status(200).json({\n            success:true,\n            message:'Section creates successfully',\n            updateCourseDetails,\n        });\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            message:'unable to create section please try again',\n        });\n    }\n}\n\nexports.updateSection = async (req,res) => {\n    try{\n        const {sectionName, sectionId} = req.body;\n\n        if(!sectionName || !sectionId){\n            return res.status(400).json({\n                success:false,\n                message:'Missing properties',\n            });\n        }\n\n        const section = await Section.findByIdAndUpdate(sectionId, {sectionName}, {new:true});\n        return res.status(200).json({\n            success:true,\n            message:'Section updated successfully',\n            \n        });\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            message:'unable to update section please try again',\n        });\n    }\n}\nexports.deleteSection = async (req,res) => {\n    try{\n        const {sectionId} = req.params\n\n        if(!sectionName || !sectionId){\n            return res.status(400).json({\n                success:false,\n                message:'Missing properties',\n            });\n        }\n\n        await Section.findByIdAndDelete(sectionId);\n        return res.status(200).json({\n            success:true,\n            message:'Section delete successfully',\n            \n        });\n    }\n    catch(error){\n        return res.status(500).json({\n            success:false,\n            message:'unable to delete section please try again',\n        });\n    }\n}"],"file":"Section.dev.js"}