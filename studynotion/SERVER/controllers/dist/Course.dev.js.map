{"version":3,"sources":["Course.js"],"names":["Course","require","Tag","User","uploadImageToCloudinary","exports","createCourse","req","res","body","courseName","courseDescription","whatYouWillLearn","price","tag","thumbnail","files","thumbnailImage","status","json","success","message","userId","user","id","findById","instructorDetails","console","log","tagDetails","process","env","FOLDER_NAME","create","instructor","_id","secure_url","newCourse","findByIdAndUpdate"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,gBAAD,CAAnB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,gBAAD,CAApB;;eACkCA,OAAO,CAAC,wBAAD,C;IAAlCG,uB,YAAAA,uB;;AAEPC,OAAO,CAACC,YAAR,GAAuB,iBAAOC,GAAP,EAAaC,GAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEsDD,GAAG,CAACE,IAF1D,EAERC,UAFQ,aAERA,UAFQ,EAEIC,iBAFJ,aAEIA,iBAFJ,EAEuBC,gBAFvB,aAEuBA,gBAFvB,EAEwCC,KAFxC,aAEwCA,KAFxC,EAE+CC,GAF/C,aAE+CA,GAF/C;AAITC,UAAAA,SAJS,GAIGR,GAAG,CAACS,KAAJ,CAAUC,cAJb;;AAAA,gBAMZ,CAACP,UAAD,IAAe,CAACC,iBAAhB,IAAqC,CAACC,gBAAtC,IAA0D,CAACC,KAA3D,IAAoE,CAACC,GAArE,IAA4E,CAACC,SANjE;AAAA;AAAA;AAAA;;AAAA,2CAOJP,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,KADgB;AAExBC,YAAAA,OAAO,EAAC;AAFgB,WAArB,CAPI;;AAAA;AAaTC,UAAAA,MAbS,GAaAf,GAAG,CAACgB,IAAJ,CAASC,EAbT;AAAA;AAAA,0CAciBrB,IAAI,CAACsB,QAAL,CAAcH,MAAd,CAdjB;;AAAA;AAcTI,UAAAA,iBAdS;AAefC,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAoCF,iBAApC;;AAfe,cAiBXA,iBAjBW;AAAA;AAAA;AAAA;;AAAA,2CAkBJlB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,KADgB;AAExBC,YAAAA,OAAO,EAAC;AAFgB,WAArB,CAlBI;;AAAA;AAAA;AAAA,0CAuBUnB,GAAG,CAACuB,QAAJ,CAAaX,GAAb,CAvBV;;AAAA;AAuBTe,UAAAA,UAvBS;;AAAA,cAwBXA,UAxBW;AAAA;AAAA;AAAA;;AAAA,2CAyBJrB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,YAAAA,OAAO,EAAC,KADgB;AAExBC,YAAAA,OAAO,EAAC;AAFgB,WAArB,CAzBI;;AAAA;AAAA;AAAA,0CA+BcjB,uBAAuB,CAACW,SAAD,EAAWe,OAAO,CAACC,GAAR,CAAYC,WAAvB,CA/BrC;;AAAA;AA+BTf,UAAAA,cA/BS;AAAA;AAAA,0CAiCSjB,MAAM,CAACiC,MAAP,CAAc;AAClCvB,YAAAA,UAAU,EAAVA,UADkC;AAElCC,YAAAA,iBAAiB,EAAjBA,iBAFkC;AAGlCuB,YAAAA,UAAU,EAACR,iBAAiB,CAACS,GAHK;AAIlCvB,YAAAA,gBAAgB,EAACA,gBAJiB;AAKlCC,YAAAA,KAAK,EAALA,KALkC;AAMlCC,YAAAA,GAAG,EAACe,UAAU,CAACM,GANmB;AAOlCpB,YAAAA,SAAS,EAACE,cAAc,CAACmB;AAPS,WAAd,CAjCT;;AAAA;AAiCTC,UAAAA,SAjCS;AAAA;AAAA,0CA2CTlC,IAAI,CAACmC,iBA3CI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["const Course = require(\"../models/Course\");\nconst Tag = require(\"../models/tags\");\nconst User = require(\"../models/User\");\nconst {uploadImageToCloudinary} = require(\"../utils/imageUploader\");\n\nexports.createCourse = async (req , res) => {\n    try{\n        const {courseName, courseDescription, whatYouWillLearn,price, tag} = req.body;\n\n        const thumbnail = req.files.thumbnailImage;\n\n        if(!courseName || !courseDescription || !whatYouWillLearn || !price || !tag || !thumbnail) {\n            return res.status(400).json({\n                success:false,\n                message:'All fields are required',\n            });\n        }\n\n        const userId = req.user.id;\n        const instructorDetails = await User.findById(userId);\n        console.log(\"Instructor Details:\" , instructorDetails);\n\n        if(!instructorDetails) {\n            return res.status(404).json({\n                success:false,\n                message:'Instructor Details not found',\n            });\n        }\n        const tagDetails = await Tag.findById(tag);\n        if(!tagDetails) {\n            return res.status(400).json({\n                success:false,\n                message:'Tags Details not found',\n            });\n        }\n\n        const thumbnailImage = await uploadImageToCloudinary(thumbnail,process.env.FOLDER_NAME);\n        \n        const newCourse = await Course.create({\n            courseName,\n            courseDescription,\n            instructor:instructorDetails._id,\n            whatYouWillLearn:whatYouWillLearn,\n            price,\n            tag:tagDetails._id,\n            thumbnail:thumbnailImage.secure_url,\n        })\n        \n        await User.findByIdAndUpdate\n    }\n    catch(error){\n\n    }\n};"],"file":"Course.dev.js"}