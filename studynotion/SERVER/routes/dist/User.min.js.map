{"version":3,"sources":["User.js"],"names":["express","require","router","Router","sendotp","login","signup","changePassword","resetPasswordToken","resetPassword","auth","post","module","exports"],"mappings":"aACA,IAAMA,QAAUC,QAAQ,WADxBC,OAAAF,QAAAG,kBAQEC,QAEU,uBAJVC,eAAAA,MACAC,gBAAAA,OACAF,iBAAAA,QACAG,wBAAAA,yBAGAC,QAAAA,gCAAAA,6BAAAA,mBACAC,wBAAAA,wBAGeR,QAAQ,uBAAjBS,eAAAA,KASRR,OAAOS,KAAK,SAAUN,OAGtBH,OAAOS,KAAK,UAAWL,QAMvBJ,OAAOS,KAAK,WAAAP,SAMZF,OAAAS,KAAA,kBAAAD,KAAAH,gBACAL,OAAOS,KAAK,wBAAyBH,oBAGrCN,OAAOS,KAAK,kBAAmBF,eAG/BG,OAAOC,QAAUX","file":"User.min.js","sourcesContent":["// Import the required modules\nconst express = require(\"express\")\nconst router = express.Router()\n\n// Import the required controllers and middleware functions\nconst {\n  login,\n  signup,\n  sendotp,\n  changePassword,\n} = require(\"../controllers/Auth\")\nconst {\n  resetPasswordToken,\n  resetPassword,\n} = require(\"../controllers/ResetPassword\")\n\nconst { auth } = require(\"../middlewares/auth\")\n\n// Routes for Login, Signup, and Authentication\n\n// ********************************************************************************************************\n//                                      Authentication routes\n// ********************************************************************************************************\n\n// Route for user login\nrouter.post(\"/login\", login)\n\n// Route for user signup\nrouter.post(\"/signup\", signup)\n\n// Route for sending OTP to the user's email\nrouter.post(\"/sendotp\", sendotp)\n\n// Route for Changing the password\nrouter.post(\"/changepassword\", auth, changePassword)\n\n// ********************************************************************************************************\n//                                      Reset Password\n// ********************************************************************************************************\n\n// Route for generating a reset password token\nrouter.post(\"/reset-password-token\", resetPasswordToken)\n\n// Route for resetting user's password after verification\nrouter.post(\"/reset-password\", resetPassword)\n\n// Export the router for use in the main application\nmodule.exports = router"]}