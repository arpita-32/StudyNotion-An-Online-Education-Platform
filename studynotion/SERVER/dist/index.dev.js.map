{"version":3,"sources":["index.js"],"names":["express","require","app","userRoutes","profileRoutes","paymentRoutes","courseRoutes","contactUsRoute","database","cookieParser","cors","cloudinaryConnect","fileUpload","dotenv","config","PORT","process","env","connect","use","json","origin","credentials","useTempFiles","tempFileDir","get","req","res","success","message","listen","console","log"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AAEA,IAAMG,UAAU,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMG,aAAa,GAAGH,OAAO,CAAC,kBAAD,CAA7B;;AACA,IAAMI,aAAa,GAAGJ,OAAO,CAAC,mBAAD,CAA7B;;AACA,IAAMK,YAAY,GAAGL,OAAO,CAAC,iBAAD,CAA5B;;AACA,IAAMM,cAAc,GAAGN,OAAO,CAAC,kBAAD,CAA9B;;AACA,IAAMO,QAAQ,GAAGP,OAAO,CAAC,mBAAD,CAAxB;;AACA,IAAMQ,YAAY,GAAGR,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMS,IAAI,GAAGT,OAAO,CAAC,MAAD,CAApB;;eAC6BA,OAAO,CAAC,qBAAD,C;IAA7BU,iB,YAAAA,iB;;AACP,IAAMC,UAAU,GAAGX,OAAO,CAAC,oBAAD,CAA1B;;AACA,IAAMY,MAAM,GAAGZ,OAAO,CAAC,QAAD,CAAtB;;AAEAY,MAAM,CAACC,MAAP;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC,C,CAEA;;AACAP,QAAQ,CAACU,OAAT,G,CACA;;AACAhB,GAAG,CAACiB,GAAJ,CAAQnB,OAAO,CAACoB,IAAR,EAAR;AACAlB,GAAG,CAACiB,GAAJ,CAAQV,YAAY,EAApB;AACAP,GAAG,CAACiB,GAAJ,CACCT,IAAI,CAAC;AACJW,EAAAA,MAAM,EAAC,uBADH;AAEJC,EAAAA,WAAW,EAAC;AAFR,CAAD,CADL;AAOApB,GAAG,CAACiB,GAAJ,CACCP,UAAU,CAAC;AACVW,EAAAA,YAAY,EAAC,IADH;AAEVC,EAAAA,WAAW,EAAC;AAFF,CAAD,CADX,E,CAMA;;AACAb,iBAAiB,G,CAEjB;;AACAT,GAAG,CAACiB,GAAJ,CAAQ,cAAR,EAAwBhB,UAAxB;AACAD,GAAG,CAACiB,GAAJ,CAAQ,iBAAR,EAA2Bf,aAA3B;AACAF,GAAG,CAACiB,GAAJ,CAAQ,gBAAR,EAA0Bb,YAA1B;AACAJ,GAAG,CAACiB,GAAJ,CAAQ,iBAAR,EAA2Bd,aAA3B;AACAH,GAAG,CAACiB,GAAJ,CAAQ,eAAR,EAAyBZ,cAAzB,E,CAGA;;AACAL,GAAG,CAACuB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1B,SAAOA,GAAG,CAACP,IAAJ,CAAS;AACfQ,IAAAA,OAAO,EAAC,IADO;AAEfC,IAAAA,OAAO,EAAC;AAFO,GAAT,CAAP;AAIA,CALD;AAOA3B,GAAG,CAAC4B,MAAJ,CAAWf,IAAX,EAAiB,YAAM;AACtBgB,EAAAA,OAAO,CAACC,GAAR,6BAAiCjB,IAAjC;AACA,CAFD","sourcesContent":["const express = require(\"express\");\nconst app = express();\n\nconst userRoutes = require(\"./routes/User\");\nconst profileRoutes = require(\"./routes/Profile\");\nconst paymentRoutes = require(\"./routes/Payments\");\nconst courseRoutes = require(\"./routes/Course\");\nconst contactUsRoute = require(\"./routes/Contact\");\nconst database = require(\"./config/database\");\nconst cookieParser = require(\"cookie-parser\");\nconst cors = require(\"cors\");\nconst {cloudinaryConnect } = require(\"./config/cloudinary\");\nconst fileUpload = require(\"express-fileupload\");\nconst dotenv = require(\"dotenv\");\n\ndotenv.config();\nconst PORT = process.env.PORT || 4000;\n\n//database connect\ndatabase.connect();\n//middlewares\napp.use(express.json());\napp.use(cookieParser());\napp.use(\n\tcors({\n\t\torigin:\"http://localhost:3000\",\n\t\tcredentials:true,\n\t})\n)\n\napp.use(\n\tfileUpload({\n\t\tuseTempFiles:true,\n\t\ttempFileDir:\"/tmp\",\n\t})\n)\n//cloudinary connection\ncloudinaryConnect();\n\n//routes\napp.use(\"/api/v1/auth\", userRoutes);\napp.use(\"/api/v1/profile\", profileRoutes);\napp.use(\"/api/v1/course\", courseRoutes);\napp.use(\"/api/v1/payment\", paymentRoutes);\napp.use(\"/api/v1/reach\", contactUsRoute);\n\n\n//def route\napp.get(\"/\", (req, res) => {\n\treturn res.json({\n\t\tsuccess:true,\n\t\tmessage:'Your server is up and running....'\n\t});\n});\n\napp.listen(PORT, () => {\n\tconsole.log(`App is running at ${PORT}`)\n})"],"file":"index.dev.js"}